import tkinter
from pathlib import Path
# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Canvas, Entry, Button, PhotoImage, OptionMenu, Frame
from tkinter import filedialog
from tkinter import messagebox

import NewStudent

OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path("./assets")


def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)


class HomeScreen(Frame):
    def __init__(self, master):
        Frame.__init__(self, master)

        self.filename = None
        self.cutoff = None
        self.meeting_service = None

        canvas = Canvas(
            self,
            bg="#FFFFFF",
            height=1000,
            width=1500,
            bd=0,
            highlightthickness=0,
            relief="ridge"
        )

        canvas.place(x=0, y=0)
        canvas.create_text(
            80.0,
            88.0,
            anchor="nw",
            text="OMAS ",
            fill="#000000",
            font=("Roboto", 72 * -1)
        )

        serviceFile_Options = ["Zoom", "Webex", "Teams"]
        value_inside = tkinter.StringVar(self)
        value_inside.set("Select an Option")
        serviceFile = OptionMenu(
            self,
            value_inside,
            *serviceFile_Options,
        )
        serviceFile.place(
            x=445.0,
            y=640.0,
            width=320.0,
            height=40.0
        )

        # button_image_2 = PhotoImage(
        #     file=relative_to_assets("button_2.png"))
        cutOff = Entry(
            self,
            # image=button_image_2,
            borderwidth=0,
            highlightthickness=2,
            # command=lambda: print("button_2 clicked"),
            # relief="flat"

        )
        cutOff.place(
            x=445.0,
            y=546.0,
            width=320.0,
            height=40.0
        )

        canvas.create_text(
            91.0,
            641.0,
            anchor="nw",
            text="Select meeting service",
            fill="#000000",
            font=("Roboto", 24 * -1)
        )

        canvas.create_text(
            91.0,
            641.0,
            anchor="nw",
            text="Select meeting service",
            fill="#000000",
            font=("Roboto", 24 * -1)
        )

        canvas.create_text(
            91.0,
            549.0,
            anchor="nw",
            text="Set cutoff (in minutes)",
            fill="#000000",
            font=("Roboto", 24 * -1)
        )

        canvas.create_text(
            1023.0,
            381.0,
            anchor="nw",
            text="Meeting service file ",
            fill="#000000",
            font=("Roboto", 24 * -1)
        )
        check = 'check-mark-button_2705.png'

        def UploadAction(event=None):
            filename = filedialog.askopenfilename()
            if filename:
                print('Selected:', filename)
                self.filename = filename
                uploadButtonImage.configure(file=relative_to_assets("check-mark-button_2705.png"))

        global uploadButtonImage
        uploadButtonImage = PhotoImage(
            file=relative_to_assets("DnD.png"))
        uploadButton = Button(
            image=uploadButtonImage,
            borderwidth=0,
            highlightthickness=0,
            text='Open',
            command=UploadAction,
            relief="flat"
        )
        uploadButton.place(
            x=865.0,
            y=426.0,
            width=555.0,
            height=298.0
        )
        # What deos this button do LoL
        global button_image_4
        button_image_4 = PhotoImage(
            file=relative_to_assets("button_4.png"))
        button_4 = Button(
            image=button_image_4,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_4 clicked"),
            relief="flat"
        )
        button_4.place(
            x=599.0,
            y=1415.0,
            width=233.0,
            height=79.0
        )

        # import the InitializeExcelDatabases class
        from InitialzeExcelDatabases import InitializeExcelDatabases

        global excelDatabaseNav_Image
        excelDatabaseNav_Image = PhotoImage(
            file=relative_to_assets("button_5.png"))
        excelDatabaseNav = Button(
            image=excelDatabaseNav_Image,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: master.switch_frame(InitializeExcelDatabases),

            relief="flat"
        )
        excelDatabaseNav.place(
            x=1175.0,
            y=88.0,
            width=260.0,
            height=50.0
        )

        canvas.create_text(
            91.0,
            250.0,
            anchor="nw",
            text="An attendance system for online meeting platforms (Zoom, Teams etc.) which uses meeting reports "
                 "generated by\n "
                 "these services and automatically organises it in a database for the user.",
            fill="#000000",
            font=("Inter Regular", 24 * -1)
        )

        canvas.create_text(
            80.0,
            340.0,
            anchor="nw",
            text="1. Select a meeting service that matches your platform.\n"
                 "2. Upload the meeting service file provided by the platform.\n"
                 "3. Upload a .CSV file containg the student database.\n"
                 "4. Click the process button when steps 1 to 3 are done.",
            fill="#000000",
            font=("Roboto", 24 * -1)
        )

        global processButton_Image
        processButton_Image = PhotoImage(
            file=relative_to_assets("process.png"))
        processButton = Button(
            image=processButton_Image,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: call_data_processor(),
            relief="flat"
        )

        def call_data_processor(meeting_file: str = None, cut_off: int = 0, service_type: str = None):
            if None in [meeting_file, cut_off, service_type]:
                tkinter.messagebox.showerror(title="warning", message="Not all details provided")
            else:
                # backend.DataProcessor.DataProcessor()
                pass

        processButton.place(
            x=634.0,
            y=833.0,
            width=233.0,
            height=79.0
        )

        canvas.create_text(
            296.0,
            122.0,
            anchor="nw",
            text="Online Meetings Attendance System",
            fill="#000000",
            font=("Roboto", 36 * -1)
        )

        global newStudentNav_Image
        newStudentNav_Image = PhotoImage(
            file=relative_to_assets("button_7.png"))
        newStudentNav = Button(
            image=newStudentNav_Image,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: master.switch_frame(NewStudent.NewStudent),
            relief="flat"
        )
        newStudentNav.place(
            x=1175.0,
            y=164.0,
            width=260.0,
            height=50.0
        )
